     //get unique characters
 const uniqueChars = data.filter((v, i, a) => a.findIndex((t) => t.full_name === v.full_name) === i);

//serial no. pagination
  let sno = page == 1 ? index + 1 : (page - 1) * pageLimit + index + 1;

//get parmameter value from url
let url = https://example.com?apikey=dawdqw323d2
let url = new URL(url);
let apiKey = url.searchParams.get("apiKey");

//add values using reducer
let addArr  = [1,3,3,4];
     addValArr = addArr.reduce(function (accu, current) {
    return accu + current
    }, 0);
     
// validation for last name middle name
  const checkFirstName = (value, item) => {
    let arr = [];
    if (value) {
      arr = value.split(" ");
    }
    let newArr = [];
    for (var i = 0; i < arr.length; i++) {
      if (arr[i] != "") {
        newArr.push(arr[i]);
      }
    }
    let valid = newArr.length <= 2 ? false : true;
      return newArr;

  };


// Remove duplicate values from array using set
var addArr  = [1,3,3,4];
var val = [...new Set(addArr)];

//regex
var reg = new RegExp("^[0-9]*$");  //allow  only disgits
var reg2 = /^[a-zA-Z0-9]*$/; // allow alpha numeric

   if (/^[A-Za-z ]*$/.test(e.target.value)) {} //allow only number  


//change time format
    var today = new Date();
    var dd = today.getDate();
    var mm = today.getMonth() + 1; //January is 0!
    var yyyy = today.getFullYear() - 18;
    if (dd < 10) {
      dd = "0" + dd;
    }
    if (mm < 10) {
      mm = "0" + mm;
    }
    today = yyyy + "-" + mm + "-" + dd;


//change date format UTC
import dateFormat from "dateformat";

dateFormat(
    convertTZ(createdDate, "UTC"),
    "mm/dd/yyyy hh:MM TT"
)

export const convertTZ = (date, tzString) => {
var data = new Date(
    (typeof date === "string" ? new Date(date) : date).toLocaleString("en-US", {
    timeZone: tzString,
    })
);
return data;
};
